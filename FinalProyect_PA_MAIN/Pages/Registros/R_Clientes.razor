@page "/clientes"

@page "/clientes/{ClienteId:int}"

@* Registro de los clientes *@

@inject AuthenticationStateProvider Authentication

@inject IToastService Toast

@using BLL

<EditForm Model="cliente" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>

    <div class="card shadow-lg">

        <div class="card ">

            <div class="card-header ">
                <h3 class="card-title">
                    Registro Clientes
                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-people-fill" viewBox="0 0 16 16">
                        <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7Zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6Zm-5.784 6A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216ZM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z"/>
                    </svg>
                </h3>
            </div>

            <div class="card-body">
                <hr>

                @*...................... Nombre ......................*@

                <div class="row">
                    <div class="form-group col-3">
                        <label>Nombre</label>
                        <InputText @bind-Value="cliente.Nombre" placeholder="Nombre cliente" class="form-control"/>
                        <ValidationMessage For="@(() => cliente.Nombre)"/>
                    </div>

                    @*...................... Email ......................*@

                    <div class="form-group col-3">
                        <label>
                            Email
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-envelope-at" viewBox="0 0 16 16">
                                <path d="M2 2a2 2 0 0 0-2 2v8.01A2 2 0 0 0 2 14h5.5a.5.5 0 0 0 0-1H2a1 1 0 0 1-.966-.741l5.64-3.471L8 9.583l7-4.2V8.5a.5.5 0 0 0 1 0V4a2 2 0 0 0-2-2H2Zm3.708 6.208L1 11.105V5.383l4.708 2.825ZM1 4.217V4a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v.217l-7 4.2-7-4.2Z"/>
                                <path d="M14.247 14.269c1.01 0 1.587-.857 1.587-2.025v-.21C15.834 10.43 14.64 9 12.52 9h-.035C10.42 9 9 10.36 9 12.432v.214C9 14.82 10.438 16 12.358 16h.044c.594 0 1.018-.074 1.237-.175v-.73c-.245.11-.673.18-1.18.18h-.044c-1.334 0-2.571-.788-2.571-2.655v-.157c0-1.657 1.058-2.724 2.64-2.724h.04c1.535 0 2.484 1.05 2.484 2.326v.118c0 .975-.324 1.39-.639 1.39-.232 0-.41-.148-.41-.42v-2.19h-.906v.569h-.03c-.084-.298-.368-.63-.954-.63-.778 0-1.259.555-1.259 1.4v.528c0 .892.49 1.434 1.26 1.434.471 0 .896-.227 1.014-.643h.043c.118.42.617.648 1.12.648Zm-2.453-1.588v-.227c0-.546.227-.791.573-.791.297 0 .572.192.572.708v.367c0 .573-.253.744-.564.744-.354 0-.581-.215-.581-.8Z"/>
                            </svg>
                        </label>
                        <InputText @bind-Value="cliente.Email" placeholder="Correro electronico" class="form-control"/>
                        <ValidationMessage For="@(() => cliente.Email)"/>
                    </div>
                </div>
                <br>

                @*...................... Cedula ......................*@

                <div class="row">
                    <div class="form-group col-3">
                        <label>
                            Cédula
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-person-vcard" viewBox="0 0 16 16">
                                <path d="M5 8a2 2 0 1 0 0-4 2 2 0 0 0 0 4Zm4-2.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5ZM9 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4A.5.5 0 0 1 9 8Zm1 2.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5Z"/>
                                <path d="M2 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H2ZM1 4a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H8.96c.026-.163.04-.33.04-.5C9 10.567 7.21 9 5 9c-2.086 0-3.8 1.398-3.984 3.181A1.006 1.006 0 0 1 1 12V4Z"/>
                            </svg>
                        </label>
                        <InputText @bind-Value="cliente.Cedula" placeholder="Numero de cédula" class="form-control"/>
                        <ValidationMessage For="@(() => cliente.Cedula)"/>
                    </div>

                    @*...................... Direccion ......................*@

                    <div class="form-group col-3">
                        <label>
                            Dirección
                            <div class="oi oi-map-marker"></div>
                        </label>
                        <InputText @bind-Value="cliente.Direccion" placeholder="Dirección ciudad"
                                   class="form-control"/>
                        <ValidationMessage For="@(() => cliente.Direccion)"/>
                    </div>
                </div>
                <br>

                @*...................... Telefono ......................*@

                <div class="row">
                    <div class="form-group col-3">
                        <label>
                            Teléfono
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-telephone-plus-fill" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M1.885.511a1.745 1.745 0 0 1 2.61.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511zM12.5 1a.5.5 0 0 1 .5.5V3h1.5a.5.5 0 0 1 0 1H13v1.5a.5.5 0 0 1-1 0V4h-1.5a.5.5 0 0 1 0-1H12V1.5a.5.5 0 0 1 .5-.5z"/>
                            </svg>
                        </label>
                        <InputText @bind-Value="cliente.Telefono" placeholder="Numero teléfonico"
                                   class="form-control"/>
                        <ValidationMessage For="@(() => cliente.Telefono)"/>
                    </div>

                    @*...................... Celular ......................*@

                    <div class="form-group col-3">
                        <label>
                            Celular
                            <div class="oi oi-phone"></div>
                        </label>
                        <InputText @bind-Value="cliente.Celular" placeholder="Celular" class="form-control"/>
                        <ValidationMessage For="@(() => cliente.Celular)"/>
                    </div>
                </div>

                @*...................... Consultar Clientes ......................*@

                <p/>
                <p/>
                <div class="form-group col-md-3" style="margin: auto;">
                    <a class="rz-border-radius-4 shadow border border-4 btn btn-lg btn btn-warning"
                       data-toggle="tooltip" data-placement="right" title="Ingresar al reporte de clientes"
                       href="reporteclientes">
                        Clientes
                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-people-fill" viewBox="0 0 16 16">
                            <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7Zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6Zm-5.784 6A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216ZM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z"/>
                        </svg>
                    </a>
                </div>
            </div>
            <br>

            @*...................... Botones ......................*@

            <div class="card-footer">

                <div class="form-group text-center" display: inline-block>

                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo" title="Nuevo cliente">
                        <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="currentColor" class="bi bi-person-fill-add" viewBox="0 0 16 16">
                            <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Zm.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1 0-1h1v-1a.5.5 0 0 1 1 0Zm-2-6a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"/>
                            <path d="M2 13c0 1 1 1 1 1h5.256A4.493 4.493 0 0 1 8 12.5a4.49 4.49 0 0 1 1.544-3.393C9.077 9.038 8.564 9 8 9c-5 0-6 3-6 4Z"/>
                        </svg>Nuevo
                    </button>

                    <button type="submit" class="btn btn-lg btn-success" title="Guardar cliente">
                        <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="currentColor" class="bi bi-person-fill-check" viewBox="0 0 16 16">
                            <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Zm1.679-4.493-1.335 2.226a.75.75 0 0 1-1.174.144l-.774-.773a.5.5 0 0 1 .708-.708l.547.548 1.17-1.951a.5.5 0 1 1 .858.514ZM11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"/>
                            <path d="M2 13c0 1 1 1 1 1h5.256A4.493 4.493 0 0 1 8 12.5a4.49 4.49 0 0 1 1.544-3.393C9.077 9.038 8.564 9 8 9c-5 0-6 3-6 4Z"/>
                        </svg>Guardar
                    </button>

                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar" title="Eliminar cliente">
                        <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="currentColor" class="bi bi-person-fill-dash" viewBox="0 0 16 16">
                            <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7ZM11 12h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1 0-1Zm0-7a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"/>
                            <path d="M2 13c0 1 1 1 1 1h5.256A4.493 4.493 0 0 1 8 12.5a4.49 4.49 0 0 1 1.544-3.393C9.077 9.038 8.564 9 8 9c-5 0-6 3-6 4Z"/>
                        </svg>Eliminar
                    </button>

                </div>
            </div>
        </div>
    </div>


</EditForm>

@code
{

#nullable disable // Para quitar el aviso de nulls

    Clientes cliente = new Clientes();

    [Inject]
    public ClientesBLL clienteBLL { get; set; } // Inyectando BLL


    [Parameter]
    public int ClienteId { get; set; }


    //-----------------------------------------------------------------------

    protected override void OnInitialized()
    {
        cliente = new Clientes();


        if (ClienteId > 0)
        {
            cliente.ClienteId = ClienteId;
            this.Buscar();
        }
    }

    public void Nuevo() // Nuevo cliente
    {
        cliente = new Clientes();
    }

    public void Guardar() // Guardar cliente
    {
        var cliente2 = clienteBLL.ExisteCedula(cliente.Cedula);

        if (cliente2 == null) //si no existe lo guarda
        {
            if (clienteBLL.Guardar(cliente))
            {
                Toast.ShowSuccess($"Cliente: {cliente.Nombre}, Guardado correctamente");
                cliente = new Clientes();
            }
            else
                Toast.ShowError("No se pudo guardar");
        }
        else // si existe, no guarda porque esa cedula pertenece a otra persona
        {
            if (cliente2.Cedula.ToLower() == cliente.Cedula.ToLower() && cliente2.ClienteId == cliente.ClienteId)
            {
                if (clienteBLL.Guardar(cliente))
                {
                    Toast.ShowSuccess($"Cliente: {cliente.Nombre}, Guardado correctamente");
                    cliente = new Clientes();
                }

                else
                    Toast.ShowError("No fue posible guardar");
            }
            else
            {
                Toast.ShowError($"Cedula: {cliente.Cedula}, pertenece a otra persona");
            }
        }
    }

    public void Buscar() // Buscar cliente
    {
        if (this.cliente.ClienteId > 0)
        {
            var Cliente = clienteBLL.Buscar(cliente.ClienteId);

            if (Cliente != null)
            {
                cliente = Cliente;
                Toast.ShowSuccess($"Cliente: {cliente.Nombre}, encontrado ");
            }
            else
            {
                Toast.ShowWarning($"No existe un cliente con este Id: {cliente.ClienteId}");
            }
        }
    }

    public void Eliminar() // Eliminar cliente
    {
        bool Eliminar;

        Eliminar = clienteBLL.Eliminar(cliente.ClienteId);

        if (Eliminar)
        {
            cliente = new Clientes();

            Toast.ShowSuccess("Eliminado correctamente");
        }
        else
            Toast.ShowError("No fue posible eliminar");
    }
    } 